// Code generated by MockGen. DO NOT EDIT.
// Source: sparkit/internal/handlers/getuserlist (interfaces: ReactionService)

// Package getuserlist_mocks is a generated GoMock package.
package getuserlist_mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockReactionService is a mock of ReactionService interface.
type MockReactionService struct {
	ctrl     *gomock.Controller
	recorder *MockReactionServiceMockRecorder
}

// MockReactionServiceMockRecorder is the mock recorder for MockReactionService.
type MockReactionServiceMockRecorder struct {
	mock *MockReactionService
}

// NewMockReactionService creates a new mock instance.
func NewMockReactionService(ctrl *gomock.Controller) *MockReactionService {
	mock := &MockReactionService{ctrl: ctrl}
	mock.recorder = &MockReactionServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReactionService) EXPECT() *MockReactionServiceMockRecorder {
	return m.recorder
}

// GetReactionList mocks base method.
func (m *MockReactionService) GetReactionList(arg0 context.Context, arg1 int) ([]int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetReactionList", arg0, arg1)
	ret0, _ := ret[0].([]int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetReactionList indicates an expected call of GetReactionList.
func (mr *MockReactionServiceMockRecorder) GetReactionList(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetReactionList", reflect.TypeOf((*MockReactionService)(nil).GetReactionList), arg0, arg1)
}
