// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v5.29.1
// source: communications.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddReactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reaction *Reaction `protobuf:"bytes,1,opt,name=Reaction,proto3" json:"Reaction,omitempty"`
}

func (x *AddReactionRequest) Reset() {
	*x = AddReactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communications_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReactionRequest) ProtoMessage() {}

func (x *AddReactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communications_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReactionRequest.ProtoReflect.Descriptor instead.
func (*AddReactionRequest) Descriptor() ([]byte, []int) {
	return file_communications_proto_rawDescGZIP(), []int{0}
}

func (x *AddReactionRequest) GetReaction() *Reaction {
	if x != nil {
		return x.Reaction
	}
	return nil
}

type AddReactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddReactionResponse) Reset() {
	*x = AddReactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communications_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddReactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddReactionResponse) ProtoMessage() {}

func (x *AddReactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communications_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddReactionResponse.ProtoReflect.Descriptor instead.
func (*AddReactionResponse) Descriptor() ([]byte, []int) {
	return file_communications_proto_rawDescGZIP(), []int{1}
}

type GetMatchListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int32 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetMatchListRequest) Reset() {
	*x = GetMatchListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communications_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchListRequest) ProtoMessage() {}

func (x *GetMatchListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communications_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchListRequest.ProtoReflect.Descriptor instead.
func (*GetMatchListRequest) Descriptor() ([]byte, []int) {
	return file_communications_proto_rawDescGZIP(), []int{2}
}

func (x *GetMatchListRequest) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type GetMatchListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authors []int32 `protobuf:"varint,1,rep,packed,name=Authors,proto3" json:"Authors,omitempty"`
}

func (x *GetMatchListResponse) Reset() {
	*x = GetMatchListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communications_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchListResponse) ProtoMessage() {}

func (x *GetMatchListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communications_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchListResponse.ProtoReflect.Descriptor instead.
func (*GetMatchListResponse) Descriptor() ([]byte, []int) {
	return file_communications_proto_rawDescGZIP(), []int{3}
}

func (x *GetMatchListResponse) GetAuthors() []int32 {
	if x != nil {
		return x.Authors
	}
	return nil
}

type GetReactionListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int32 `protobuf:"varint,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *GetReactionListRequest) Reset() {
	*x = GetReactionListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communications_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReactionListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReactionListRequest) ProtoMessage() {}

func (x *GetReactionListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communications_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReactionListRequest.ProtoReflect.Descriptor instead.
func (*GetReactionListRequest) Descriptor() ([]byte, []int) {
	return file_communications_proto_rawDescGZIP(), []int{4}
}

func (x *GetReactionListRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetReactionListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receivers []int32 `protobuf:"varint,1,rep,packed,name=Receivers,proto3" json:"Receivers,omitempty"`
}

func (x *GetReactionListResponse) Reset() {
	*x = GetReactionListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communications_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetReactionListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReactionListResponse) ProtoMessage() {}

func (x *GetReactionListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communications_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReactionListResponse.ProtoReflect.Descriptor instead.
func (*GetReactionListResponse) Descriptor() ([]byte, []int) {
	return file_communications_proto_rawDescGZIP(), []int{5}
}

func (x *GetReactionListResponse) GetReceivers() []int32 {
	if x != nil {
		return x.Receivers
	}
	return nil
}

type GetMatchTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstUser  int32 `protobuf:"varint,1,opt,name=FirstUser,proto3" json:"FirstUser,omitempty"`
	SecondUser int32 `protobuf:"varint,2,opt,name=SecondUser,proto3" json:"SecondUser,omitempty"`
}

func (x *GetMatchTimeRequest) Reset() {
	*x = GetMatchTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communications_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchTimeRequest) ProtoMessage() {}

func (x *GetMatchTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communications_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchTimeRequest.ProtoReflect.Descriptor instead.
func (*GetMatchTimeRequest) Descriptor() ([]byte, []int) {
	return file_communications_proto_rawDescGZIP(), []int{6}
}

func (x *GetMatchTimeRequest) GetFirstUser() int32 {
	if x != nil {
		return x.FirstUser
	}
	return 0
}

func (x *GetMatchTimeRequest) GetSecondUser() int32 {
	if x != nil {
		return x.SecondUser
	}
	return 0
}

type GetMatchTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time string `protobuf:"bytes,1,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *GetMatchTimeResponse) Reset() {
	*x = GetMatchTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communications_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchTimeResponse) ProtoMessage() {}

func (x *GetMatchTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communications_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchTimeResponse.ProtoReflect.Descriptor instead.
func (*GetMatchTimeResponse) Descriptor() ([]byte, []int) {
	return file_communications_proto_rawDescGZIP(), []int{7}
}

func (x *GetMatchTimeResponse) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type GetMatchesBySearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int32  `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Search   string `protobuf:"bytes,2,opt,name=Search,proto3" json:"Search,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=Username,proto3" json:"Username,omitempty"`
}

func (x *GetMatchesBySearchRequest) Reset() {
	*x = GetMatchesBySearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communications_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchesBySearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchesBySearchRequest) ProtoMessage() {}

func (x *GetMatchesBySearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communications_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchesBySearchRequest.ProtoReflect.Descriptor instead.
func (*GetMatchesBySearchRequest) Descriptor() ([]byte, []int) {
	return file_communications_proto_rawDescGZIP(), []int{8}
}

func (x *GetMatchesBySearchRequest) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetMatchesBySearchRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *GetMatchesBySearchRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetMatchesBySearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Authors []int32 `protobuf:"varint,1,rep,packed,name=Authors,proto3" json:"Authors,omitempty"`
}

func (x *GetMatchesBySearchResponse) Reset() {
	*x = GetMatchesBySearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communications_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchesBySearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchesBySearchResponse) ProtoMessage() {}

func (x *GetMatchesBySearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communications_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchesBySearchResponse.ProtoReflect.Descriptor instead.
func (*GetMatchesBySearchResponse) Descriptor() ([]byte, []int) {
	return file_communications_proto_rawDescGZIP(), []int{9}
}

func (x *GetMatchesBySearchResponse) GetAuthors() []int32 {
	if x != nil {
		return x.Authors
	}
	return nil
}

type UpdateOrCreateReactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reaction *Reaction `protobuf:"bytes,1,opt,name=Reaction,proto3" json:"Reaction,omitempty"`
}

func (x *UpdateOrCreateReactionRequest) Reset() {
	*x = UpdateOrCreateReactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communications_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrCreateReactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrCreateReactionRequest) ProtoMessage() {}

func (x *UpdateOrCreateReactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communications_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrCreateReactionRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrCreateReactionRequest) Descriptor() ([]byte, []int) {
	return file_communications_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateOrCreateReactionRequest) GetReaction() *Reaction {
	if x != nil {
		return x.Reaction
	}
	return nil
}

type UpdateOrCreateReactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateOrCreateReactionResponse) Reset() {
	*x = UpdateOrCreateReactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communications_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrCreateReactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrCreateReactionResponse) ProtoMessage() {}

func (x *UpdateOrCreateReactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communications_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrCreateReactionResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrCreateReactionResponse) Descriptor() ([]byte, []int) {
	return file_communications_proto_rawDescGZIP(), []int{11}
}

type CheckMatchExistsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstUser  int32 `protobuf:"varint,1,opt,name=FirstUser,proto3" json:"FirstUser,omitempty"`
	SecondUser int32 `protobuf:"varint,2,opt,name=SecondUser,proto3" json:"SecondUser,omitempty"`
}

func (x *CheckMatchExistsRequest) Reset() {
	*x = CheckMatchExistsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communications_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckMatchExistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMatchExistsRequest) ProtoMessage() {}

func (x *CheckMatchExistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communications_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMatchExistsRequest.ProtoReflect.Descriptor instead.
func (*CheckMatchExistsRequest) Descriptor() ([]byte, []int) {
	return file_communications_proto_rawDescGZIP(), []int{12}
}

func (x *CheckMatchExistsRequest) GetFirstUser() int32 {
	if x != nil {
		return x.FirstUser
	}
	return 0
}

func (x *CheckMatchExistsRequest) GetSecondUser() int32 {
	if x != nil {
		return x.SecondUser
	}
	return 0
}

type CheckMatchExistsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exists bool `protobuf:"varint,1,opt,name=Exists,proto3" json:"Exists,omitempty"`
}

func (x *CheckMatchExistsResponse) Reset() {
	*x = CheckMatchExistsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communications_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckMatchExistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMatchExistsResponse) ProtoMessage() {}

func (x *CheckMatchExistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_communications_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMatchExistsResponse.ProtoReflect.Descriptor instead.
func (*CheckMatchExistsResponse) Descriptor() ([]byte, []int) {
	return file_communications_proto_rawDescGZIP(), []int{13}
}

func (x *CheckMatchExistsResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

type Reaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       int32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Author   int32 `protobuf:"varint,2,opt,name=Author,proto3" json:"Author,omitempty"`
	Receiver int32 `protobuf:"varint,3,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	Type     bool  `protobuf:"varint,4,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *Reaction) Reset() {
	*x = Reaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communications_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reaction) ProtoMessage() {}

func (x *Reaction) ProtoReflect() protoreflect.Message {
	mi := &file_communications_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reaction.ProtoReflect.Descriptor instead.
func (*Reaction) Descriptor() ([]byte, []int) {
	return file_communications_proto_rawDescGZIP(), []int{14}
}

func (x *Reaction) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Reaction) GetAuthor() int32 {
	if x != nil {
		return x.Author
	}
	return 0
}

func (x *Reaction) GetReceiver() int32 {
	if x != nil {
		return x.Receiver
	}
	return 0
}

func (x *Reaction) GetType() bool {
	if x != nil {
		return x.Type
	}
	return false
}

var File_communications_proto protoreflect.FileDescriptor

var file_communications_proto_rawDesc = []byte{
	0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4a, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x08,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x15, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x30, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x07, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x22, 0x30, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x72, 0x73, 0x22, 0x53, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x22, 0x2a, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x73, 0x42, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x36, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x42, 0x79, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x22, 0x55, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x20,
	0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x57, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x46,
	0x69, 0x72, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x22, 0x32, 0x0a, 0x18, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x22, 0x62, 0x0a,
	0x08, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x32, 0xcf, 0x05, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x56, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x73, 0x42, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x29, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x42, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x42, 0x79, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x10,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73,
	0x12, 0x27, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x2e, 0x2e, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x3b, 0x67, 0x65, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_communications_proto_rawDescOnce sync.Once
	file_communications_proto_rawDescData = file_communications_proto_rawDesc
)

func file_communications_proto_rawDescGZIP() []byte {
	file_communications_proto_rawDescOnce.Do(func() {
		file_communications_proto_rawDescData = protoimpl.X.CompressGZIP(file_communications_proto_rawDescData)
	})
	return file_communications_proto_rawDescData
}

var file_communications_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_communications_proto_goTypes = []interface{}{
	(*AddReactionRequest)(nil),             // 0: communications.AddReactionRequest
	(*AddReactionResponse)(nil),            // 1: communications.AddReactionResponse
	(*GetMatchListRequest)(nil),            // 2: communications.GetMatchListRequest
	(*GetMatchListResponse)(nil),           // 3: communications.GetMatchListResponse
	(*GetReactionListRequest)(nil),         // 4: communications.GetReactionListRequest
	(*GetReactionListResponse)(nil),        // 5: communications.GetReactionListResponse
	(*GetMatchTimeRequest)(nil),            // 6: communications.GetMatchTimeRequest
	(*GetMatchTimeResponse)(nil),           // 7: communications.GetMatchTimeResponse
	(*GetMatchesBySearchRequest)(nil),      // 8: communications.GetMatchesBySearchRequest
	(*GetMatchesBySearchResponse)(nil),     // 9: communications.GetMatchesBySearchResponse
	(*UpdateOrCreateReactionRequest)(nil),  // 10: communications.UpdateOrCreateReactionRequest
	(*UpdateOrCreateReactionResponse)(nil), // 11: communications.UpdateOrCreateReactionResponse
	(*CheckMatchExistsRequest)(nil),        // 12: communications.CheckMatchExistsRequest
	(*CheckMatchExistsResponse)(nil),       // 13: communications.CheckMatchExistsResponse
	(*Reaction)(nil),                       // 14: communications.Reaction
}
var file_communications_proto_depIdxs = []int32{
	14, // 0: communications.AddReactionRequest.Reaction:type_name -> communications.Reaction
	14, // 1: communications.UpdateOrCreateReactionRequest.Reaction:type_name -> communications.Reaction
	0,  // 2: communications.Communications.AddReaction:input_type -> communications.AddReactionRequest
	2,  // 3: communications.Communications.GetMatchList:input_type -> communications.GetMatchListRequest
	4,  // 4: communications.Communications.GetReactionList:input_type -> communications.GetReactionListRequest
	6,  // 5: communications.Communications.GetMatchTime:input_type -> communications.GetMatchTimeRequest
	8,  // 6: communications.Communications.GetMatchesBySearch:input_type -> communications.GetMatchesBySearchRequest
	10, // 7: communications.Communications.UpdateOrCreateReaction:input_type -> communications.UpdateOrCreateReactionRequest
	12, // 8: communications.Communications.CheckMatchExists:input_type -> communications.CheckMatchExistsRequest
	1,  // 9: communications.Communications.AddReaction:output_type -> communications.AddReactionResponse
	3,  // 10: communications.Communications.GetMatchList:output_type -> communications.GetMatchListResponse
	5,  // 11: communications.Communications.GetReactionList:output_type -> communications.GetReactionListResponse
	7,  // 12: communications.Communications.GetMatchTime:output_type -> communications.GetMatchTimeResponse
	9,  // 13: communications.Communications.GetMatchesBySearch:output_type -> communications.GetMatchesBySearchResponse
	11, // 14: communications.Communications.UpdateOrCreateReaction:output_type -> communications.UpdateOrCreateReactionResponse
	13, // 15: communications.Communications.CheckMatchExists:output_type -> communications.CheckMatchExistsResponse
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_communications_proto_init() }
func file_communications_proto_init() {
	if File_communications_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_communications_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communications_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddReactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communications_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communications_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communications_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReactionListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communications_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetReactionListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communications_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communications_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communications_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchesBySearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communications_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchesBySearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communications_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrCreateReactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communications_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrCreateReactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communications_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckMatchExistsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communications_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckMatchExistsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communications_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_communications_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_communications_proto_goTypes,
		DependencyIndexes: file_communications_proto_depIdxs,
		MessageInfos:      file_communications_proto_msgTypes,
	}.Build()
	File_communications_proto = out.File
	file_communications_proto_rawDesc = nil
	file_communications_proto_goTypes = nil
	file_communications_proto_depIdxs = nil
}
