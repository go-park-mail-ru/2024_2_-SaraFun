// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/go-park-mail-ru/2024_2_SaraFun/internal/pkg/personalities/delivery/http/updateprofile (interfaces: ImageService)

// Package updateprofile_mocks is a generated GoMock package.
package updateprofile_mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/go-park-mail-ru/2024_2_SaraFun/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockImageService is a mock of ImageService interface.
type MockImageService struct {
	ctrl     *gomock.Controller
	recorder *MockImageServiceMockRecorder
}

// MockImageServiceMockRecorder is the mock recorder for MockImageService.
type MockImageServiceMockRecorder struct {
	mock *MockImageService
}

// NewMockImageService creates a new mock instance.
func NewMockImageService(ctrl *gomock.Controller) *MockImageService {
	mock := &MockImageService{ctrl: ctrl}
	mock.recorder = &MockImageServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImageService) EXPECT() *MockImageServiceMockRecorder {
	return m.recorder
}

// UpdateOrdNumbers mocks base method.
func (m *MockImageService) UpdateOrdNumbers(arg0 context.Context, arg1 []models.Image) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOrdNumbers", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateOrdNumbers indicates an expected call of UpdateOrdNumbers.
func (mr *MockImageServiceMockRecorder) UpdateOrdNumbers(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOrdNumbers", reflect.TypeOf((*MockImageService)(nil).UpdateOrdNumbers), arg0, arg1)
}
